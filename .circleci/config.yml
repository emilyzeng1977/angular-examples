version: 2.1
jobs:
  PrepareEnv:
    docker:
      - image: circleci/python:3
    working_directory: /tmp/repo
    steps:
      - checkout
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: /tmp/repo
          # Must be relative path from root
          paths:
            - '.'

  GenerateAppVersion:
    docker:
      - image: circleci/python:3
    environment:
      GH_TOKEN: 17e396315d1e9961cbaa46afd2f100257990555
      REPO_ENC_KEY: 4826F5CA0F50D4EA265D5691C18B5691776ED1FB10C5DF73CE45614AF12AE0E1
      REPO_ENC_IV: 8BD9321FB88376E7944339FAA16A26C0
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/repo
      - run:
          name: Check the current position
          command: |
            pwd
            ls -alt ~/
            ls -alt ~/tmp/repo
      - run:
          name: Decode ssh key for github
          command: |
            echo $GH_TOKEN
            export GH_TOKEN=${GH_TOKEN}"7"
            openssl aes-256-cbc -d -K $REPO_ENC_KEY -iv $REPO_ENC_IV -in git_deploy_key.enc -out /tmp/git_deploy_key
            chmod 600 /tmp/git_deploy_key
            cat /tmp/git_deploy_key
            mkdir ~/.ssh
            cp config ~/.ssh/
            ls -alt ~/.ssh/
            echo 'echo ${SSL_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
            eval "$(ssh-agent -s)"
            openssl aes-256-cbc -d -K $REPO_ENC_KEY -iv $REPO_ENC_IV -in git_deploy_key.enc -out /tmp/git_deploy_key

      - run:
          name: Update Build Version
          command: |
            sudo apt update
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt install nodejs
            node --version
            npm --version
            cd bookStore
            npx semantic-release
            appVersion=$(cat ./package.json | jq -r '.version')
            echo ${appVersion}

workflows:
  build-deploy:
    jobs:
      - PrepareEnv
      - GenerateAppVersion:
          requires:
            - PrepareEnv
